<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class cursomateriahorario extends Basecursomateriahorario
{
	public function getActiveCursoMateriaHorarioQuery()
	{
	  $q = Doctrine_Query::create()->select('ca.*')->from('cursomateriahorario ca, curso c,periodo p')->where('ca.codigocurso=c.codigocurso and ca.codigoperiodo=p.codigoperiodo')->orderBy('p.periodo desc,ca.codigodia,ca.codigohorario');	 
	  return $q;
	}
	
	public function getActiveCursoMateriaHorario($max = 10)
	{
	  $q = $this->getActiveCursoMateriaHorarioQuery()->limit($max);	 
	  return $q->execute();
	}
	 
	public function countActiveCursoMateriaHorario()
	{
	  return $this->getActiveCursoMateriaHorarioQuery()->count();
	}
	
	public function getPeriodo($codigoPeriodo)
	{
		$arregloPeriodo = Doctrine::getTable('periodo')
		->createQuery('p')
		->select('p.*')			   
		->where('p.codigoperiodo = ?', $codigoPeriodo)	
		->execute();
		return $arregloPeriodo->getFirst();
	}
	
	public function getCurso($codigoCurso)
	{
		$arregloCurso = Doctrine::getTable('curso')
		->createQuery('c')
		->select('c.*')			   
		->where('c.codigocurso = ?', $codigoCurso)	
		->execute();
		return $arregloCurso->getFirst();
	}
	
	public function getParalelo($codigoParalelo)
	{
		$arregloParalelo = Doctrine::getTable('paralelo')
		->createQuery('p')
		->select('p.*')			   
		->where('p.codigoparalelo= ?', $codigoParalelo)	
		->execute();
		return $arregloParalelo->getFirst();
	}
	
	public function getHorario($codigoHorario)
	{
		$arregloHorario = Doctrine::getTable('horario')
		->createQuery('h')
		->select('h.*')			   
		->where('h.codigohorario = ?', $codigoHorario)	
		->execute();
		return $arregloHorario->getFirst();
	}
	
	public function getDia($codigoDia)
	{
		$arregloDia = Doctrine::getTable('dia')
		->createQuery('d')
		->select('d.*')			   
		->where('d.codigodia = ?', $codigoDia)	
		->execute();
		return $arregloDia->getFirst();
	}
	
	public function getMateria($codigoMateria)
	{
		$arregloMateria = Doctrine::getTable('materia')
		->createQuery('m')
		->select('m.*')			   
		->where('m.codigomateria = ?', $codigoMateria)	
		->execute();
		return $arregloMateria->getFirst();
	}
}